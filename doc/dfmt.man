USAGE: dub run [<package>[@<version-spec>]] [<options...>] [-- <application arguments...>]

Builds and runs a package (uses the main package in the current working
directory by default)


Command specific options
========================

      --temp-build      Builds the project in the temp folder if possible.
      --rdmd            Use rdmd instead of directly invoking the compiler
  -f  --force           Forces a recompilation even if the target is up to date
  -y  --yes             Automatic yes to prompts. Assume "yes" as answer to all
                        interactive prompts.
  -n  --non-interactive Don't enter interactive mode.
  -b  --build=VALUE     Specifies the type of build to perform. Note that
                        setting the DFLAGS environment variable will override
                        the build type with custom flags.
                        Possible names:
                          debug, plain, release, release-debug,
                          release-nobounds, unittest, profile, profile-gc,
                          docs, ddox, cov, cov-ctfe, unittest-cov,
                          unittest-cov-ctfe, syntax and custom types
  -c  --config=VALUE    Builds the specified configuration. Configurations can
                        be defined in dub.json
      --override-config=VALUE
                        Uses the specified configuration for a certain
                        dependency. Can be specified multiple times.
                        Format: --override-config=<dependency>/<config>
      --compiler=VALUE  Specifies the compiler binary to use (can be a path).
                        Arbitrary pre- and suffixes to the identifiers below
                        are recognized (e.g. ldc2 or dmd-2.063) and matched to
                        the proper compiler type:
                          dmd, gdc, ldc, gdmd, ldmd
  -a  --arch=VALUE      Force a different architecture (e.g. x86 or x86_64)
  -d  --debug=VALUE     Define the specified `debug` version identifier when
                        building - can be used multiple times
      --d-version=VALUE Define the specified `version` identifier when building
                        - can be used multiple times.
                        Use sparingly, with great power comes great
                        responsibility! For commonly used or combined versions
                        and versions that dependees should be able to use,
                        create configurations in your package.
      --nodeps          Do not resolve missing dependencies before building
      --build-mode=VALUE
                        Specifies the way the compiler and linker are invoked.
                        Valid values:
                          separate (default), allAtOnce, singleFile
      --single          Treats the package name as a filename. The file must
                        contain a package recipe comment.
      --force-remove    Deprecated option that does nothing.
      --filter-versions [Experimental] Filter version identifiers and debug
                        version identifiers to improve build cache efficiency.
      --combined        Tries to build the whole project in a single compiler
                        run.
      --print-builds    Prints the list of available build types
      --print-configs   Prints the list of available configurations
      --print-platform  Prints the identifiers for the current build platform
                        as used for the build fields in dub.json
      --parallel        Runs multiple compiler instances in parallel, if
                        possible.


Common options
==============

  -h  --help            Display general or command specific help
      --root=VALUE      Path to operate in instead of the current working dir
      --registry=VALUE  Search the given registry URL first when resolving
                        dependencies. Can be specified multiple times.
                        Available registry types:
                          DUB: URL to DUB registry (default)
                          Maven: URL to Maven repository + group id containing
                          dub packages as artifacts. E.g.
                          mvn+http://localhost:8040/maven/libs-release/dubpackages
      --skip-registry=VALUE
                        Sets a mode for skipping the search on certain package
                        registry types:
                          none: Search all configured or default registries
                          (default)
                          standard: Don't search the main registry (e.g.
                          https://code.dlang.org/)
                          configured: Skip all default and user configured
                          registries
                          all: Only search registries specified with --registry
      --annotate        Do not perform any action, just print what would be
                        done
      --bare            Read only packages contained in the current directory
  -v  --verbose         Print diagnostic output
      --vverbose        Print debug output
  -q  --quiet           Only print warnings and errors
      --verror          Only print errors
      --vquiet          Print no messages
      --color=VALUE     Configure colored output. Accepted values:
                               auto: Colored output on console/terminal,
                                     unless NO_COLOR is set and non-empty
                                     (default)
                             always: Force colors enabled
                              never: Force colors disabled
      --cache=VALUE     Puts any fetched packages in the specified location
                        [local|system|user].

DUB version 1.34.0, built on Aug 18 2023
